package com.todo.To_Do.Services;


import com.todo.To_Do.Entity.ToDo;
import com.todo.To_Do.Repository.ToDoRepo;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Service;

import java.util.*;

@Service
public class ToDoServices {
    @Autowired
    private ToDoRepo toDoRepo;

    public ResponseEntity<List<ToDo>> getAll(){
        try{
            Iterable<ToDo> iterable = toDoRepo.findAll();
            List<ToDo> list = new ArrayList<>();
            for(ToDo todo : iterable){
                list.add(todo);
            }
            return new ResponseEntity<>( list, HttpStatus.OK);
        } catch (Exception e) {
            return new ResponseEntity<>(HttpStatus.BAD_REQUEST);
        }

    }
    public ResponseEntity<?> enter(ToDo todo){
        try{
            toDoRepo.save(todo);
            return new ResponseEntity<>(todo , HttpStatus.CREATED);
        } catch (Exception e) {
            return new ResponseEntity<>(HttpStatus.BAD_REQUEST);
        }

    }
    public ResponseEntity<?> delete(String id){
        try{
            Optional<ToDo> optional = toDoRepo.findById(id);
            if(optional.isPresent()){
                toDoRepo.deleteById(id);
                return new ResponseEntity<>(optional.get() , HttpStatus.OK);
            }
            else {
                return new ResponseEntity<>(HttpStatus.NOT_FOUND);
            }
        } catch (Exception e) {
            return new ResponseEntity<>(HttpStatus.BAD_REQUEST);
        }
    }
    public ResponseEntity<?> getById(String id){
        Optional<ToDo> optional = toDoRepo.findById(id);
        if(optional.isPresent()){
            return new ResponseEntity<>(optional.get() , HttpStatus.OK);
        }
        else {
            return new ResponseEntity<>(HttpStatus.NOT_FOUND);
        }
    }
    public ResponseEntity<ToDo> update(String id, ToDo todo){
       try{
           Optional<ToDo> optional = toDoRepo.findById(id);
           if(optional.isPresent()){
               ToDo oldToDo = optional.get();
               if(!Objects.equals(oldToDo.getContent(), todo.getContent())){
                   oldToDo.setContent(todo.getContent());
               }
               if(!Objects.equals(oldToDo.getTitle(), todo.getTitle())){
                   oldToDo.setTitle(todo.getTitle());
               }
               toDoRepo.save(oldToDo);
               return new ResponseEntity<>(oldToDo,HttpStatus.OK);
           }
           else{
               toDoRepo.save(todo);
               return new ResponseEntity<>(todo,HttpStatus.OK);
           }

       } catch (Exception e) {
           return new ResponseEntity<>(HttpStatus.BAD_REQUEST);
       }
    }
}
